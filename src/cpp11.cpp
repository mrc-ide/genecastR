// Generated by cpp11: do not edit by hand
// clang-format off

#include <cpp11/R.hpp>
#include <Rcpp.h>
using namespace Rcpp;
#include "cpp11/declarations.hpp"
#include <R_ext/Visibility.h>

// main.cpp
double loglike_cpp11(doubles params, list data, list misc);
extern "C" SEXP _genecastR_loglike_cpp11(SEXP params, SEXP data, SEXP misc) {
  BEGIN_CPP11
    return cpp11::as_sexp(loglike_cpp11(cpp11::as_cpp<cpp11::decay_t<doubles>>(params), cpp11::as_cpp<cpp11::decay_t<list>>(data), cpp11::as_cpp<cpp11::decay_t<list>>(misc)));
  END_CPP11
}
// main.cpp
double logprior_cpp11(doubles params, list misc);
extern "C" SEXP _genecastR_logprior_cpp11(SEXP params, SEXP misc) {
  BEGIN_CPP11
    return cpp11::as_sexp(logprior_cpp11(cpp11::as_cpp<cpp11::decay_t<doubles>>(params), cpp11::as_cpp<cpp11::decay_t<list>>(misc)));
  END_CPP11
}

extern "C" {
static const R_CallMethodDef CallEntries[] = {
    {"_genecastR_loglike_cpp11",  (DL_FUNC) &_genecastR_loglike_cpp11,  3},
    {"_genecastR_logprior_cpp11", (DL_FUNC) &_genecastR_logprior_cpp11, 2},
    {NULL, NULL, 0}
};
}

extern "C" attribute_visible void R_init_genecastR(DllInfo* dll){
  R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
  R_useDynamicSymbols(dll, FALSE);
  R_forceSymbols(dll, TRUE);
}
